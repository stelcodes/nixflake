# /etc/zshrc: DO NOT EDIT -- this file has been generated automatically.
# This file is read for interactive shells.
#
# Note that generated /etc/zprofile and /etc/zshrc files do a lot of
# non-standard setup to make zsh usable with no configuration by default.
#
# Which means that unless you explicitly meticulously override everything
# generated, interactions between your ~/.zshrc and these files are likely
# to be rather surprising.
#
# Note however, that you can disable loading of the generated /etc/zprofile
# and /etc/zshrc (you can't disable loading of /etc/zshenv, but it is
# designed to not set anything surprising) by setting `no_global_rcs` option
# in ~/.zshenv:
#
#   echo setopt no_global_rcs >> ~/.zshenv
#
# See "STARTUP/SHUTDOWN FILES" section of zsh(1) for more info.


# Only execute this file once per shell.
if [ -n "$__ETC_ZSHRC_SOURCED" -o -n "$NOSYSZSHRC" ]; then return; fi
__ETC_ZSHRC_SOURCED=1

# Set zsh options.
setopt HIST_IGNORE_DUPS SHARE_HISTORY HIST_FCNTL_LOCK


# Setup command line history.
# Don't export these, otherwise other shells (bash) will try to use same HISTFILE.
SAVEHIST=2000
HISTSIZE=2000
HISTFILE=$HOME/.zsh_history

# Configure sane keyboard defaults.
. /etc/zinputrc

# Enable autocompletion.
autoload -U compinit && compinit




# Setup custom interactive shell init stuff.


source /nix/store/3g8iq0h5cxsxlxvxdb4qhqcpycdxkii7-zsh-autosuggestions-0.6.4/share/zsh-autosuggestions/zsh-autosuggestions.zsh

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=8"
export ZSH_AUTOSUGGEST_STRATEGY=("history")



# oh-my-zsh configuration generated by NixOS
export ZSH=/nix/store/s1crx1bgr6srx1qg84qdcqs24k75d2f7-oh-my-zsh-2021-04-26/share/oh-my-zsh

plugins=(httpie colored-man-pages)





if [[ ! -d "$HOME/.cache/oh-my-zsh" ]]; then
  mkdir -p "$HOME/.cache/oh-my-zsh"
fi
ZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh


source $ZSH/oh-my-zsh.sh

# This function is called whenever a command is not found.
command_not_found_handler() {
  local p=/nix/store/rhcmg25gj4yk6sr2444qkx8zdmfcm5r0-command-not-found/bin/command-not-found
  if [ -x $p -a -f /nix/var/nix/profiles/per-user/root/channels/nixos/programs.sqlite ]; then
    # Run the helper program.
    $p "$@"

    # Retry the command if we just installed it.
    if [ $? = 126 ]; then
      "$@"
    else
      return 127
    fi
  else
    # Indicate than there was an error so ZSH falls back to its default handler
    echo "$1: command not found" >&2
    return 127
  fi
}


# Setup aliases.
alias absolutepath='realpath -e'
alias backup-config='tar --create --gzip --file ~/backups/config/$(date +%F_%T)_config.tar.gz --directory=/config .'
alias bat='bat --theme=base16'
alias clj='clojure'
alias clj-repl='rlwrap clojure -M:repl'
alias ga='git add'
alias gc='git commit'
alias gs='git status'
alias gui='exec sway'
alias hg='history | grep'
alias l='ls -alh'
alias ll='ls -l'
alias ls='ls --color=tty'
alias nix-search='nix repl '\''<nixpkgs>'\'''
alias pdf='evince-previewer'
alias play-latest-obs-recording='mpv $(ls /home/stel/videos/obs | sort --reverse | head -1)'
alias protonmail='firefox --new-window mail.protonmail.com/login'
alias restic-backup-mapache='restic -r /run/media/stel/Mapache/restic-backups/ backup --files-from=/config/misc/restic/include.txt --exclude-file=/config/misc/restic/exclude.txt'
alias restic-backup-napi='restic -r /run/media/stel/Napi/restic-backups/ backup --files-from=/config/misc/restic/include.txt --exclude-file=/config/misc/restic/exclude.txt'
alias restic-mount-mapache='restic -r /run/media/stel/Mapache/restic-backups/ mount /home/stel/backups/Mapache-restic'
alias restic-mount-napi='restic -r /run/media/stel/Napi/restic-backups/ mount /home/stel/backups/Napi-restic'
alias screenshot='slurp | grim -g - ~/pictures/screenshots/$(date +%F_%T)_screenshot.png'
alias source-tmux='tmux source-file /etc/tmux.conf'
alias source-zsh='source /etc/zsh/zshrc'
alias switch='doas nixos-rebuild switch'
alias tether='doas dhcpcd'
alias update='doas nix-channel --update'
alias vpn='doas protonvpn connect -f'
alias wifi='nmtui'
alias yt='youtube-dl -f "best[height=720]"'

# Setup prompt.
eval "$(starship init zsh)"

# Disable some features to support TRAMP.
if [ "$TERM" = dumb ]; then
    unsetopt zle prompt_cr prompt_subst
    unset RPS1 RPROMPT
    PS1='$ '
    PROMPT='$ '
fi

# Read system-wide modifications.
if test -f /etc/zshrc.local; then
    . /etc/zshrc.local
fi
